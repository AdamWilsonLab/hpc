% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module.R
\name{module}
\alias{module}
\title{Linux Environment Modules interface}
\usage{
module(Arguments)
}
\arguments{
\item{Arguments}{"[ switches ] [ subcommand ] [ subcommand-args ]" See examples.}
}
\value{
Output messages will be sent to stderr
}
\description{
Access the linux Environment Modules which provides for the dynamic modification of a user's
environment via modulefiles.
}
\details{
Each modulefile contains the information needed to configure the shell for an application.
Once the RLinuxModules package is initialized (with \code{\link{moduleInit}}), the environment can
be modified on a per-module basis using the module command which interprets modulefiles. Typically
modulefiles instruct the module command to alter or set shell environment variables such as PATH,
MANPATH, etc. modulefiles may be shared by many users on a system and users may have their own
collection to supplement or replace the shared modulefiles.
}
\examples{
module("avail") # shows available modules

module("--help") # show available sub-commands and switches

module("load netcdf") # loads the module "netcdf"
system("which netcdf") # check that samtools is loaded in the environment

module("list") # list loaded modules

# Load multiple modules at the same time
module("load lmod/6.0.1 StdEnv intel/15.0 hdf5/1.8.15p1 netcdf python/anaconda R grass nco cdo")
# if you still have trouble loading a package due to a missing shared object, you can try to use dyn.load directly.
# For example, you can load libpng with a particular path as follows:
dyn.load("/util/academic/libpng/1.6.17/lib/libpng16.so.16")
dyn.load("/util/academic/grass/gdal-2.2.0/lib/libgdal.so.20")
}
